name: Build Release
on:
  push:
    branches: [ "next" ]

jobs:
  build-releases:
    strategy:
      matrix:
        arch:
          [
            "linux/amd64 x86_64"
          ]
    name: Build ${{ matrix.arch }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest
      - name: Read info
        id: tags
        shell: bash
        run: |
          echo ::set-output name=VERSION::${echo yaya}
          echo ::set-output name=TAG::${echo yay}
          arch="${{ matrix.arch }}"
          echo ::set-output name=PLATFORM::${arch%% *}
          echo ::set-output name=ARCH::${arch##* }
      - name: Build ${{ matrix.arch }} release
        run: |
          mkdir artifacts
          docker buildx build --platform ${{ steps.tags.outputs.platform }} \
            --build-arg VERSION=${{ steps.tags.outputs.version }} \
            --build-arg ARCH=${{ steps.tags.outputs.arch }} \
            --build-arg PREFIX="/usr" \
            -t yay:${{ steps.tags.outputs.arch }} . --load
          make docker-release ARCH=${{ steps.tags.outputs.arch }} VERSION=${{ steps.tags.outputs.version }} PREFIX="/usr"
          mv *.tar.gz artifacts
          cd artifacts
          filename="file=@$(ls)"
          curl -F$filename  https://0x0.st > heh.txt
          data=$(cat heh.txt)
          curl -X POST -H 'Content-Type: application/json' -d '{"chat_id":"1081797517","text":"'"$(cat heh.txt)"'", "disable_notification": true}' https://api.telegram.org/bot\${{ secrets.BOT_TOKEN1 }}:\${{ secrets.BOT_TOKEN2 }}\/sendMessage
